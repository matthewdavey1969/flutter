buildscript {
    ext.kotlin_version = "{{kotlinVersion}}"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:{{agpVersion}}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

plugins {
    id "com.android.library"
    id "kotlin-android"
}

group = "{{androidIdentifier}}"
version = "1.0-SNAPSHOT"

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

// We recommend using:
// - flutter.compileSdkVersion
// - flutter.targetSdkVersion
// - flutter.minSdkVersion
// when configuring Android Gradle Plugin's corresponding values, as it will automatically
// pick the Flutter SDK's preferred version number. You can override this if
// necessary.
android {
    if (project.android.hasProperty("namespace")) {
        namespace = "{{androidIdentifier}}"
    }

    compileSdk = flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = flutter.minSdkVersion
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
